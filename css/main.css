.profile {
    width: 300px; 
    display: block; 
    margin-left: auto; 
    margin-right: auto;
}

.profile-title {
    font-size: 16px; 
    letter-spacing: 3px; 
    text-align: center;
}

.content {
    text-align: center;
}

.box {
    width: 200px;
    background-color: cadetblue;
    margin: 30px;
    padding: 40px;
    border-radius: 10px;
    display: block; 
    margin-left: auto; 
    margin-right: auto;
    font-size: 10px;
    color: white;
    box-shadow: 5px 5px grey;
}

.container {
    width: 800px;
}

.header {
    width: 100%;
    height: 50px;
    background-color: aquamarine;
}

.left-menu {
    width: 20%;
    height: 400px;
    background: cornflowerblue;
    /* float: left; */
    display: inline-block;
 }

 .right {
    width: 80%;
    height: 400px;
    background: coral;
    /* float: left; */
    display: inline-block;
 }

 .footer {
    width: 100%;
    height: 100px;
    background-color: grey;
    /* clear: both; */
 }

 .main-background {
    width: 100%;
    height: 500px;
    background-image: url(../img/shoes.jpg);
    background-size: cover;
    /* background-size: cover; 짤려도 ㄱㅊ, div 여백 없게*/
    /* background-size: contain; 짤려도 ㄱㅊ, div 여백 있어도*/
    
    /* 배경 반복 X */
    background-repeat: no-repeat;

    /* 가운데 부터 채워짐*/
    background-position: center;

    /* 스크롤 시, 배경 위치 조정 */
    /* background-attachment: fixed; */

    /* filter: brightness(70%); */
    padding: 1px;
    text-align: center;
    position: relative;
 }

 .main-title {
    color: white;
    font-size: 40px;
    margin-top: 100px;
    text-align: center;
 }

 .main-content {
    color: white;
    padding: 20px;
 }

 .main-button {
    padding: 15px;
    font-size: 20px;
    background-color: white;
    border: none;
    border-radius: 5px;

    /* position 부여하면 좌표이동가능, 공중에 뜸 */
    position: relative;
    /* 
    relative : 내 원래 위치가 고정
    static : 좌표이동 X, 
    fixed : 화면 고정, 
    absolute 부모 태그 기준 - (position: relative  가진 부모 기준  
    */

    /* 
    position: absolute 가운데 정렬 방법
    left: 0;
    right: 0;
    margin: auto;
    width: 150px; (적당히 아무렇게 주면 됨)
    */
 }

 .explain-box {
    background-color: #eee;
    /* 반응형 웹페이지 만들고 싶으면 % 자주 사용함 */
    width: 80%;
    max-width: 600px;
    margin: auto;
    padding: 20px;
    text-align: center;
    position: relative;
    top: -40px;
    /* z-index 높을 수록 앞에 온다 */
    box-sizing: border-box;
 }

 /* 써놓고 개발하면 편함
div {
    box-sizing: border-box; 
}
body {
    margin: 0px;
}
normalize.css 도 복붙하고 시작하면 좋음 (브라우저 간 균일한 스타일 가능)
혹은 <link rel="" href="">에 추가
*/

  div {
    box-sizing: border-box;
  }

  /* select 문법 input 중 type이 text인 것들 */
/* input[type=text] {
    padding: 10px;
    font-size: 20px;
    border: 1px solid black;
    border-radius: 5px;
}

.text-input {
    padding: 10px;
    font-size: 20px;
    border: 1px solid black;
    border-radius: 5px;
} */

/* 재사용 가능한 css/ */
.w-50 {
    float: left;
    width: 50%;
    padding: 10px;
}

.w-50 > p {
    margin-top: 0px;
}

.w-100 {
    width: 100%;
    padding: 10px;
}

/* 부모에 display: flex를 통해 가로배치 쉽게 가능 */
.flex-container {
    height: 50px;
    display: flex;
    background-color: rgb(251, 92, 92);
    /* flex 이용 시, 정렬 */
    /* justify-content: center; */

    /* 반응형 웹에서 유용 */
    /* flex-direction: column; */
    /* flex-direction: row; */

    /* flex-wrap: wrap; */
    /* 넓이가 넘치면 column으로 보여준다 */

    /* 가운데 정렬 */
    align-items: center;
    justify-items: center;
    
    font-size: 22px;
    color: white;
}
.flex-item {
    width: 100px;
    padding: 10px;
    margin-right: 5px;
}

.test {
    /* vw는 viewport로 우리가 지금 보는 화면 크기이다 */
    /* 반응형에서 자주 사용한다 */
    width: 100vw;
    height: 100px;
    background: grey;
}

.shop-bg {
    background-color: #eee;
    padding: 20px;
}

.shop-container {
    display: flex;
    width: 90%;
    margin: auto;
}

.shop-item {
    width: 33%;
    padding: 10px;
}

.shop-item img {
    width: 100%;
    display: block; /* 검정색 삐져나오는 부분 없애줌 */
}

.overlay {
    /* 부모 요소에 position: relative를 선언하고 absolute를 통해 위에 띄운다 */
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    /* transition을 통해 애니메이션 효과 부여
    자바스크립트를 모르면 hover가 최선이다
    */
    transition: all 1s; 
    /* transition: opacity 1s;  */
    /* 속도를 바꿀 수 있음
     transition-timing-function: cubic-bezier();
     */
}

.overlay:hover {
    opacity: 1;
}

.overlay-wrap {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    /* overflow: hidden을 통해 넘치는 것 안보여준다 */
}

/* overlay-wrap에 마우스를 올리면 그 안의 overlay-black을 수정 */
.overlay-wrap:hover .overlay-black {
    margin-top: 50%;
}


.overlay-black {
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    margin-top: 100%;
    transition: all 1s;
}

.price {
    color: white;
}
/* 크롬 개발자도구에서 Animations를 통해 다른사이트 참고할 수 있다 */


/* media query 보통 css 최하단에 적는다 */
/* 1200px 이하에서는 이렇게 동작한다 */
/* 큰 것부터 작은 순으로 */
/* 1200px: 테블릿, 768px: 모바일 등 breakpoint (3, 4개 정도만)*/
@media screen and (max-width: 1200px) {
    .main-title {
        font-size: 30px;
    }
    .flex-item {
        font-size: 18px;
    }
}

@media screen and (max-width: 992px) {
    .r-item {
        float: left;
        width: 50%;
    }
}

@media screen and (max-width: 768px) {
    .main-title {
        font-size: 20px;
    }
}

@media screen and (max-width: 592px) {
    .r-item {
        float: none;
        width: 100%;
    }
}

@media screen and (max-width: 576px) {
    .main-title {
        font-size: 15px;
    }
    .w-50 {
        float: none;
        width: 100%;
        padding: 10px;
    }
}

/* media print : 인쇄할 때 */